name: Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches-ignore:
      - main
jobs:
  Run-Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - name: Install packages
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Tests
        run: npm test

  Deploy-Staging-Preview:
    if: ${{ github.ref == 'refs/heads/develop' }}
    needs: Run-Tests
    runs-on: ubuntu-latest
    environment:
      name: Staging Preview Deployment
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: echo "url=$(vercel deploy --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

  Deploy-Feature-Preview:
    if: ${{ github.ref != 'refs/heads/develop' }}
    needs: Run-Tests
    runs-on: ubuntu-latest
    environment:
      name: Feature Preview Deployment
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: echo "url=$(vercel deploy --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
